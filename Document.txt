-dotnet --info
-donet --version
-dotnet new webapi -n DatingApp.API
-dotnet run
-download nuget extention
-dotnet watch run
-in nugat Microsoft.EntityFrameworkCore
-inherit DbContext
-construction - DbContextOptions options : base(options);
-property MatchdatabaseTable - DbSet<Value> Values
-Startup->Configuration->AddServices = services.AddDbContext<DataContext> (x => x.UseSqlite(Configuration.GetConnectionString("DefaultConnection")));
dotnet tool install --global dotnet-ef --version 3.0.0
-dotnet ef -h
-dotnet ef migrations add InitialCreate
-dotnet ef database update
-npm install -g @angular/cli
-ng new DatingApp-SPA
-extenion = angular snippt, angular file, angular rename tag, braket pari colorizer, material icon theme, Prettier, Tslint, angular2-switcher
-services.AddCors(); in ConfigureServices
-app.UseCors(x => x.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader()); in Configur
-npm install bootstrap font-awesome
addScoped<IRepo, Repo>()
passwordHash + passwordSalt
Microsoft.IdentityModel.Tokens --nogat package manager
dotnet user-secrets init

Form Valid: {{ loginForm.vaild }}
Form Touched: {{ loginForm.touched}}
Form Dirsty: {{ loginForm.touched}}
Form Values: {{ loginForm.value | json}}

Username Valid: {{ username.vaild }}
Username Touched: {{ username.touched }}
Username Dirsty: {{ username.dirty }}
Username Values: {{ username.value | json}}

Password Valid: {{ password.vaild }}
Password Touched: {{ password.touched }}
Password Dirsty: {{ password.dirty }}
Password Values: {{ password.value | json}}

npm install alertifyjs
npm install @auth0/angular-jwt
npm install ngx-bootstrap --save
npm install bootswatch.

setting up routing-> using RouterLinkActive-> using routing in code-> protecting routing -> protecting multiple routing at once
export const appRoutes: Routes = [
  { path: 'home', component: HomeComponent}
];

for single canActivate
{
    path: '',
    runGuardsAndResolvers: 'always',
    canActivate: [AuthGuard],
    children: [
      { path: 'members', component: MemberListComponent},
      { path: 'messages', component: MessagesComponent},
      { path: 'lists', component: ListsComponent},
    ]
  },

ng g guard auth --skipTests
canActivate -> define in route.ts

Extention
Seeding Data into database => json generator
AutoMapper

 <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.2" />
    <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.5.1" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.5.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.2" />